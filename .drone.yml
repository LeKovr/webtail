kind: pipeline
name: ci

steps:
- name: fetch tags
  image: alpine/git
  commands:
  - git fetch --tags
  - git describe --tags --always > .version

- name: test app
  image: ghcr.io/dopos/golang-alpine:1.16.10-alpine3.14
  commands:
  - go test -tags test -covermode=atomic -coverprofile=coverage.out ./...
  - go vet ./...
  - apk add --no-cache curl bash git
  - curl -sSL https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter format-coverage coverage.out -t gocov -p $${DRONE_REPO_LINK#https://}
  - ./cc-test-reporter upload-coverage
  environment:
    CGO_ENABLED: 0
    CODECOV_TOKEN:
      from_secret: my-codecov-token
    CC_TEST_REPORTER_ID:
      from_secret: my-codeclimate-token

- name: test docker build
  image: plugins/docker
  settings:
    repo: testbuild
    dry_run: true
  when:
    event:
      exclude:
      - tag
